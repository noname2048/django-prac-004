# purpose: development
# docker-compose -f <file_path> --no-cache up
version: "3.8"

services:
  postgres_container:
    image: postgres
    ports:
      - 5431:5432
    volumes:
      - ./docker_volumes/postgres_container_volume:/var/lib/postgresql/data
    environment: 
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8

  redis_container:
    image: redis
    ports:
      - 6378:6379
    volumes:
      - ./docker_volumes/redis_container_volume:/data
    command:
      - /bin/bash
      - -c
      - >
        redis-server 
        --appendonly yes
        --requirepass "pickle"

  django_container:
    depends_on:
      - postgres_container
      - redis_container
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.django.dev
    ports:
      - "8000:8000"
    volumes:
      - ./:/askbanana
    env_file: 
      .env
    command:
      - /bin/bash
      - -c
      - | 
        dockerize -wait tcp://postgres_container:5432 -timeout 15s
        dockerize -wait tcp://redis_container:6379 -timeout 15s
        cd /askbanana/django_project
        python manage.py migrate
        python manage.py inituser
        python manage.py runserver 0:8000

      # /bin/bash -c 'while !</dev/tcp/postgres_container/5432; do sleep 2; done;'
      # dockerize -wait tcp://postgres_container:5432 -timeout 15s
      # dockerize -wait tcp://redis:6379 -timeout 15s
      # ./wait-for-it.sh postgres_container:5432 --echo "postgres up"
